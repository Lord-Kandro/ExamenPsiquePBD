// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PsiqueHelp.Adaptors.SQLServerDataAccess.Contexts;

namespace PsiqueHelp.Adaptors.SQLServerDataAccess.Migrations
{
    [DbContext(typeof(PsiqueDB))]
    partial class PsiqueDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.ConTer", b =>
                {
                    b.Property<Guid>("ConTer_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("ConTer_id");

                    b.ToTable("tb_ConTer");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.Forum", b =>
                {
                    b.Property<Guid>("Id_Forum")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Id_UserDa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Id_User_Psy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("topic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_Forum");

                    b.HasIndex("Id_UserDa");

                    b.HasIndex("Id_User_Psy");

                    b.ToTable("tb_Forum");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.LoginUsers", b =>
                {
                    b.Property<Guid>("Id_Login")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("Id_Login");

                    b.ToTable("tb_LoginUsers");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.Notes", b =>
                {
                    b.Property<Guid>("id_Note")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Id_UserDa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<string>("description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.HasKey("id_Note");

                    b.HasIndex("Id_UserDa");

                    b.ToTable("tb_Notes");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.Psy_Da", b =>
                {
                    b.Property<Guid>("Id_User_Psy")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ConTer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("Id_Login")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Register_S")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("cell")
                        .HasColumnType("int");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("folio")
                        .HasColumnType("int");

                    b.Property<string>("idPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("volume")
                        .HasColumnType("int");

                    b.HasKey("Id_User_Psy");

                    b.HasIndex("ConTer_id");

                    b.HasIndex("Id_Login");

                    b.ToTable("tb_PsyDa");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.UserDa", b =>
                {
                    b.Property<Guid>("Id_UserDa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Cell")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("Id_Login")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Updated_at")
                        .HasColumnType("datetime2");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.HasKey("Id_UserDa");

                    b.HasIndex("Id_Login");

                    b.ToTable("tb_UserDa");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.comments", b =>
                {
                    b.Property<Guid>("Id_Forum")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Id_UserDa")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timedate")
                        .HasColumnType("datetime2");

                    b.Property<string>("title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Forum", "Id_UserDa");

                    b.HasIndex("Id_UserDa");

                    b.ToTable("tb_comments");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.mediums", b =>
                {
                    b.Property<Guid>("Id_Medios")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ConTer_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("music")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("datetime2");

                    b.Property<string>("video")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id_Medios");

                    b.HasIndex("ConTer_id");

                    b.ToTable("tb_Mediums");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.Forum", b =>
                {
                    b.HasOne("PsiqueHelp.Core.Domain.Models.UserDa", "user")
                        .WithMany("forum")
                        .HasForeignKey("Id_UserDa");

                    b.HasOne("PsiqueHelp.Core.Domain.Models.Psy_Da", "psyda")
                        .WithMany("forum")
                        .HasForeignKey("Id_User_Psy");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.Notes", b =>
                {
                    b.HasOne("PsiqueHelp.Core.Domain.Models.UserDa", "user")
                        .WithMany("notes")
                        .HasForeignKey("Id_UserDa");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.Psy_Da", b =>
                {
                    b.HasOne("PsiqueHelp.Core.Domain.Models.ConTer", "conterp")
                        .WithMany("psycon")
                        .HasForeignKey("ConTer_id");

                    b.HasOne("PsiqueHelp.Core.Domain.Models.LoginUsers", "login_users")
                        .WithMany("psyLog")
                        .HasForeignKey("Id_Login");
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.UserDa", b =>
                {
                    b.HasOne("PsiqueHelp.Core.Domain.Models.LoginUsers", "login_userId_Login")
                        .WithMany("userLog")
                        .HasForeignKey("Id_Login")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.comments", b =>
                {
                    b.HasOne("PsiqueHelp.Core.Domain.Models.Forum", "CommentsForum")
                        .WithMany("Coments")
                        .HasForeignKey("Id_Forum")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PsiqueHelp.Core.Domain.Models.UserDa", "user")
                        .WithMany("Comments")
                        .HasForeignKey("Id_UserDa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PsiqueHelp.Core.Domain.Models.mediums", b =>
                {
                    b.HasOne("PsiqueHelp.Core.Domain.Models.ConTer", "contenido")
                        .WithMany("mediums")
                        .HasForeignKey("ConTer_id");
                });
#pragma warning restore 612, 618
        }
    }
}
